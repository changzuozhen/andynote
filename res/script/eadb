#!/usr/local/bin/python
# coding=utf-8
import os
import subprocess
import sys

__author__ = 'benny'

MANU_XIAOMI = "xiaomi"
MANU_ALPS = "alps"

def getdevices():
    lines = os.popen('adb devices').readlines()
    found = False
    ret = []
    for line in lines:
        line = line.strip()
        if found:
            if line:
                ret.append(line.split('\t')[0])
        elif 'List of devices attached' == line:
            found = True

    return ret

def get_right_value(value):
    return value.split('=')[1]


def find(collection, target):
    for ele in collection:
        if target in ele:
            return ele.strip()


def execute(cmd):
    return os.popen(cmd).readlines()


def getModel(device):
    build_prop_str = 'adb -s %s shell cat /system/build.prop' % device
    result_manufacturer_str = find(execute(build_prop_str), "ro.product.manufacturer")
    manufacturer = get_right_value(result_manufacturer_str).lower()
    if manufacturer == MANU_ALPS:
        manufacturer = get_right_value(find(execute(build_prop_str), "ro.product.brand="))
        manufacturer = manufacturer.lower()

    # 获取型号
    if MANU_XIAOMI == manufacturer:
        ro_build_product = get_right_value(find(execute(build_prop_str), "ro.build.product="))
        if 'HM' in ro_build_product:
            model = "红米"
    else:
        model = get_right_value(find(execute(build_prop_str), "ro.product.model="))

    return model

devices = getdevices()
chosenDevice = devices[0]
if len(devices) > 1:
    for i in range(0, len(devices)):
        print ("[%d] %s" % (i, getModel(devices[i])))

    chosen = raw_input("Choose a device to execute the command: [default 0]: ")
    if chosen:
        index = int(chosen)
        chosenDevice = devices[index]


cmd = "adb"
args = "-s %s " % chosenDevice
cmds = ["adb", "-s", chosenDevice]
cmds.extend(sys.argv[1:])
subprocess.call(cmds)